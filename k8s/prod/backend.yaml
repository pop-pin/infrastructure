apiVersion: apps/v1
kind: Deployment
metadata:
  name: poppin-backend-prod
  namespace: backend-server-prod
  labels:
    type: backend
    app: poppin-backend-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      type: backend
      app: poppin-backend-prod
  template:
    metadata:
      labels:
        type: backend
        app: poppin-backend-prod
    spec:
      containers:
        - name: spring
          image: poppinteam/backend-server:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
            limits:
              memory: "2Gi"
              cpu: "1"
          ports:
            - containerPort: 8080
              name: backend-port
          envFrom:
            - configMapRef:
                name: poppin-prod-config
          env:
            - name: DB_URL
              value: jdbc:mysql://poppin-db-svc.database-prod.svc.cluster.local:3306/poppin
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: poppin-prod-config
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: poppin-prod-config
                  key: DB_PASSWORD
            - name: S3_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: poppin-prod-config
                  key: S3_ACCESS_KEY
            - name: S3_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: poppin-prod-config
                  key: S3_SECRET_KEY
            - name: S3_REGION_STATIC
              value: ap-northeast-2
            - name: S3_BUCKET
              value: poppin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poppin-prod-config
  namespace: backend-server-prod
data:
  DB_USERNAME: root
  DB_PASSWORD: 13df686e-b621-4641-8d0a-842d9cf17433
  S3_ACCESS_KEY: none
  S3_SECRET_KEY: none

---
apiVersion: v1
kind: Service
metadata:
  name: poppin-backend-svc
  namespace: backend-server-prod
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /api/actuator/prometheus
    prometheus.io/port: "8080"
  labels:
    type: backend
    app: poppin-backend-prod
spec:
  ports:
    - name: http
      port: 8080
  selector:
    type: backend
    app: poppin-backend-prod
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: poppin-prod-cert
  namespace: istio-system
spec:
  secretName: poppin-prod-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: api.prod.poppin.life
  dnsNames:
  - api.prod.poppin.life
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: poppin-backend-gw
  namespace: backend-server-prod
spec:
  selector:
    app: istio-ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - api.prod.poppin.life
    tls:
      httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE # enables HTTPS on this port
      credentialName: poppin-prod-tls
    hosts:
    - api.prod.poppin.life
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: poppin-backend-vs
  namespace: backend-server-prod
spec:
  hosts:
  - api.prod.poppin.life
  gateways:
  - poppin-backend-gw
  http:
    - match:
        - uri:
            prefix: /api
      route:
        - destination:
            host: poppin-backend-svc
            port:
              number: 8080
